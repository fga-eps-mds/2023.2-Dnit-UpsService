// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using app.Entidades;

#nullable disable

namespace app.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231108034320_AdicionaFuncaoCalcularDistancia")]
    partial class AdicionaFuncaoCalcularDistancia
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Entidades.Rodovia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AnoApuracao")
                        .HasColumnType("integer");

                    b.Property<string>("CodigoSNV")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ConcessaoConvenio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EstadualCoincidente")
                        .HasColumnType("text");

                    b.Property<double>("Extensao")
                        .HasColumnType("double precision");

                    b.Property<string>("FederalCoincidente")
                        .HasColumnType("text");

                    b.Property<double>("KmFinal")
                        .HasColumnType("double precision");

                    b.Property<double>("KmInicial")
                        .HasColumnType("double precision");

                    b.Property<string>("LocalInicioFim")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("MP082")
                        .HasColumnType("boolean");

                    b.Property<int>("NumeroRodovia")
                        .HasColumnType("integer");

                    b.Property<string>("Superficie")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SuperficieEstadual")
                        .HasColumnType("text");

                    b.Property<string>("TipoTrecho")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Uf")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Rodovias");
                });

            modelBuilder.Entity("Entidades.Sinistro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Causa")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("DataUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Feridos")
                        .HasColumnType("integer");

                    b.Property<string>("Gravidade")
                        .HasColumnType("text");

                    b.Property<double>("Km")
                        .HasColumnType("double precision");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<int>("Mortos")
                        .HasColumnType("integer");

                    b.Property<int>("Rodovia")
                        .HasColumnType("integer");

                    b.Property<string>("Sentido")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Snv")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Solo")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Tipo")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("Uf")
                        .HasColumnType("integer");

                    b.Property<int?>("Ups")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Sinistros");
                });
#pragma warning restore 612, 618
        }
    }
}
